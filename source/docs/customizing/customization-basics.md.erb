---
title: 'Customization Basics'
published: true
author: sacha
date: 0002/01/01
blog_name: docs
section: 2
blurb: 'How Telescope customization works.'
order: 1
---

Before starting to customize your Telescope instance, it's important to understand what *not* to do. 

### Git Conflicts

While you can go ahead and start modifying your app's code right out of the box, this will make it very hard to keep your codebase up to date with future versions of Telescope. 

If you were to modify the `post_item` template in `/client/views/posts/post_item.html`, and if that template was *also* modified in a future update, you would end up with a Git conflict on your hands next time you tried to merge both versions. 

### The Right Way

The solution is two-fold. First, you'll want to **override** existing templates and variables, not modify them directly. So instead of modifying the `post_item` template, you'll create a brand new `post_item2` template and tell Telescope to use *that* instead. Telescope's master branch doesn't have a `post_item2` template, so there's no risk of conflict there. 

Second, you'll want to do these overrides in a separate **package**. This ensures that all your modifications are centralized in a single place and not spread out throughout the codebase, and is one more precaution against Git conflicts. 

Read on to learn how to create packages and keep your code tidy. 