---
title: 'Updating Telescope'
published: true
author: sacha
date: 0004/01/01
blog_name: docs
section: 1
blurb: "Keeping your app up to date."
---

Keeping your version of Telescope up to date is important to benefit from the latest bug fixes and improvements. 

### Git Remotes

You can update your local Git repository using the `git pull` command from within your project directory to pull in the latest changes:

```
git pull
```

Now if you've customized Telescope or forked it on GitHub, your `origin` remote might not be pointing to the Telescope repo.

For example, you might have an `origin` repo pointing to your own fork on GitHub, and a `heroku` remote pointing to your Heroku instance. 

In that case, the first step will be adding the Telescope repo back as a remote:

```
git remote add telescope https://github.com/TelescopeJS/Telescope.git
```

You'll then be able to specify you want to pull from the `master` branch of the `telescope` remote:

```
git pull telescope master
```

### Git Conflicts

If you've made use of third-party packages or your own local packages to customize Telescope, you will probably get Git conflicts in `.meteor/packages`, `smart.json` and `smart.lock`. 

Double-check the list of packages in `.meteor/packages` and `smart.json` first to solve the conflict. `smart.lock` will get automatically generated from `smart.json` so its contents are less important. 

### Updating Packages

Once you're happy with your list of packages, run `mrt update packageName` to update a specific package, or `mrt update` to update all of them.