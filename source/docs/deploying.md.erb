---
title: 'Deploying'
published: true
author: sacha
date: 0004/01/01
blog_name: docs
section: 1
---

There are many ways to deploy Telescope. Here are a few proven options.


### Option 1: Mup (recommended)

You can easily deploy on your own server, such as a [Digital Ocean](https://www.digitalocean.com/), [Amazon EC2](http://aws.amazon.com/ec2/), or [Linode](https://www.linode.com/) instance using a tool called [Meteor Up](https://github.com/arunoda/meteor-up), or `mup` for short.

Just fill in your instance's IP along with your ssh username and password, and Meteor Up will take care of the server setup and any subsequent deployments for you. 

I personally recommend [Digital Ocean](https://www.digitalocean.com/) for their cheap prices, clean dashboard, and great support. 

#### Pros

- Easy to port your whole app to another service.
- Open-source and configurable.

#### Cons

- Requires launching a new instance when you want to scale.

### Option 2: Modulus

Another great option is deploying on [Modulus](https://modulus.io/). Thanks to their command line tool, you can deploy Meteor apps very easily, and the service is quite affordable at around $15 per month for the cheapest plans. 

You'll find more information about their deployment process [on the Modulus site](https://modulus.io/codex/meteor_apps). 

#### Pros

- Dedicated Node.js/Meteor support.
- Easy to scale.

#### Cons

- Harder to switch to a different service.


### Option 3: Meteor.com

You can also deploy any Meteor app to Meteor's own free hosting on *.meteor.com. 

You'll find more information about it [in the official Meteor documentation](http://docs.meteor.com/#deploying), but be warned that this free offering is not suitable for production apps, and will not be able to handle large amount of traffic. 

#### Pros

- Free.
- Just works out of the box.

#### Cons

- Not production-ready.

### Other Options

Finally, you can also deploy on Heroku using the [Meteorite buildpack](https://github.com/oortcloud/heroku-buildpack-meteorite).

<% note do %>

### Database Hosting

No matter which hosting option you pick, I strongly recommend hosting your database on [Compose](https://www.compose.io/) (formerly MongoHQ), for a couple reasons:

1. It will make it easy to use their Oplog feature, which makes Meteor apps noticeably faster.
2. Having your database hosted independently makes it a lot easier to switch servers if you need to. 
3. Compose also provides automatic backups, as well as a web UI to access your database.

<% end %>